version: "3"

services:
  # db:
  #   image: postgres:12.15
  #   environment:
  #     - POSTGRES_DB=shalfey_db
  #     - POSTGRES_USER=
  #     - POSTGRES_PASSWORD=
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  backend:
    image: shalfey-backend
    build:
      context: backend
      dockerfile: Dockerfile
    command: gunicorn db_schema.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/shalfey/static/
      - media_volume:/shalfey/media/
    expose:
      - 8000
    # depends_on:
    #   - db
  # frontend
  frontend:
    image: shalfey-frontend
    build:
      context: frontend
      dockerfile: Dockerfile.production
    environment:
      API_URL: http://127.0.0.1:8000/api/
    # ports:
    #   - 3000:3000
    # volumes:
    #   - ./frontend/src:/web/src
    #   - ./frontend/public:/web/public
  # certbot
  certbot:
    image: certbot/certbot:latest
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./certbot/www/:/var/www/certbot/
      - ./certbot/conf/:/etc/letsencrypt/
  # nginx
  nginx:
    image: nginx:1.24.0-alpine
    environment:
      - PUBLIC_HOST=marketplace.dvstr.net
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    # links:
    #   - frontend
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # certbot
      - ./certbot/www:/var/www/certbot/
      - ./certbot/conf/:/etc/letsencrypt/
      # django static
      - static_volume:/shalfey/static/
      - media_volume:/shalfey/media/
    depends_on:
      - frontend
      - certbot

volumes:
  static_volume:
  media_volume:
